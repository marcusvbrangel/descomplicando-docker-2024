

------------------------------------------------------------------------


alpine / busybox


------------------------------------------------------------------------


vim Dockerfile

"""
FROM ubuntu:20.04
RUN apt update && apt install nginx -y
EXPOSE 80
CMD ["nginx", "-g", "daemon off"]
"""


docker image build -t meu-nginx:1.0 .


docker image ls

    REPOSITORY                      TAG       IMAGE ID       CREATED         SIZE
    meu-nginx                       1.0       fa1738c4e8fd   3 minutes ago   186MB


docker container run -d -p 8080:80 --name meu-novo-nginx meu-nginx:1.0 

docker container ls

curl localhost:8080

ip -a







------------------------------------------------------------------------


echo "<h1>Teste de funcionamento</h1>" > index.html


"""
FROM ubuntu:20.04
RUN apt update && \
    apt install nginx -y && \
    rm -rf /var/lib/apt/lists/*
WORKDIR /var/www/html/
COPY index.html .
ENV APP_VERSION=1.0.0
EXPOSE 80
CMD ["nginx", "-g", "daemon off;"]
"""


docker image build -t meu-nginx:2.0 .

docker image ls

    REPOSITORY                      TAG       IMAGE ID       CREATED         SIZE
    meu-nginx                       2.0       4ad4031c492d   6 minutes ago   132MB


docker container run -d -p 8081:80 --name meu-nginx-2 meu-nginx:2.0

docker container ls

    CONTAINER ID   IMAGE                 COMMAND                  CREATED         STATUS         PORTS                                       NAMES
    e1ce59a035db   meu-nginx:2.0         "nginx -g 'daemon of…"   3 minutes ago   Up 3 minutes   0.0.0.0:8081->80/tcp, :::8081->80/tcp       meu-nginx-2

localhost:8081





"""
FROM ubuntu:20.04
LABEL maintainer="marcusvbrangel"
RUN apt update && \
    apt install nginx -y && \
    rm -rf /var/lib/apt/lists/*
WORKDIR /var/www/html/
COPY index.html .
ENV APP_VERSION 1.0.0
EXPOSE 80
ENTRYPOINT ["nginx"]
CMD ["-g", "daemon off;"]
"""

docker image build -t meu-nginx:3.0 .

docker image ls

    REPOSITORY                      TAG       IMAGE ID       CREATED          SIZE
    meu-nginx                       3.0       088cee539868   30 minutes ago   132MB

docker container run -d -p 8082:80 --name meu-nginx-3 meu-nginx:3.0 

docker container ls

    CONTAINER ID   IMAGE                 COMMAND                  CREATED              STATUS              PORTS                                       NAMES
    efcb4069fca1   meu-nginx:3.0         "nginx -g 'daemon of…"   About a minute ago   Up About a minute   0.0.0.0:8082->80/tcp, :::8082->80/tcp       meu-nginx-3

docker container inspect meu-nginx-3






docker image prune




------------------------------------------------------------------------


cp Dockerfile Dockerfile-terceiro


"""
FROM ubuntu:20.04
LABEL maintainer="marcusvbrangel"
RUN apt update && \
    apt install nginx -y && \
    rm -rf /var/lib/apt/lists/*
WORKDIR /var/www/html/
ADD https://github.com/prometheus/node_exporter/releases/download/v1.8.2/node_exporter-1.8.2.darwin-amd64.tar.gz /root/node-exporter
COPY index.html .
ENV APP_VERSION=1.0.0
EXPOSE 80
HEALTHCHECK --timeout=2s CMD [ "curl localhost" ] || exit 1
ENTRYPOINT ["nginx"]
CMD ["-g", "daemon off;"]
"""


docker image build -t meu-nginx:4.0 .

docker image ls

docker container run -d -p 8083:80 --name meu-nginx-4 meu-nginx:4.0 

docker container ls

    CONTAINER ID   IMAGE                 COMMAND                  CREATED             STATUS                    PORTS                                       NAMES
    37cd60e9c6d6   meu-nginx:4.0         "nginx -g 'daemon of…"   10 minutes ago      Up 10 minutes (healthy)   0.0.0.0:8083->80/tcp, :::8083->80/tcp       meu-nginx-4



docker container exec -it meu-nginx-4 bash

root@37cd60e9c6d6:~# cd /root/node-exporter 

    bash: cd: /root/node-exporter: Not a directory

root@37cd60e9c6d6:~# ls -la

    -rw------- 1 root root 5067320 Jul 14 11:58 node-exporter





------------------------------------------------------------------------


wget https://github.com/prometheus/node_exporter/releases/download/v1.8.2/node_exporter-1.8.2.darwin-amd64.tar.gz /root/node-exporter

"""
FROM ubuntu:20.04
LABEL maintainer="marcusvbrangel"
RUN apt update && \
    apt install nginx -y && \
    rm -rf /var/lib/apt/lists/*
WORKDIR /var/www/html/
ADD node_exporter-1.8.2.darwin-amd64.tar.gz /root/node-exporter
COPY index.html .
ENV APP_VERSION=1.0.0
EXPOSE 80
HEALTHCHECK --timeout=2s CMD [ "curl localhost" ] || exit 1
ENTRYPOINT ["nginx"]
CMD ["-g", "daemon off;"]
"""

cp Dockerfile Dockerfile-quarto

docker image build -t meu-nginx:5.0 .

docker container run -d -p 8084:80 --name meu-nginx-5 meu-nginx:5.0

docker container exec -it meu-nginx-5 bash

root@0addb6bc40ed:/var/www/html# cd

root@0addb6bc40ed:~# pwd

    /root

root@0addb6bc40ed:~# ls -la

    drwxr-xr-x 3 root root 4096 Aug 26 00:47 node-exporter

root@0addb6bc40ed:~# cd node-exporter/

root@0addb6bc40ed:~/node-exporter# ls -la

    drwxr-xr-x 2 1001 1002 4096 Jul 14 11:58 node_exporter-1.8.2.darwin-amd64

root@0addb6bc40ed:~/node-exporter# cd node_exporter-1.8.2.darwin-amd64/

root@0addb6bc40ed:~/node-exporter/node_exporter-1.8.2.darwin-amd64# ls -la

    drwxr-xr-x 2 1001 1002     4096 Jul 14 11:58 .
    drwxr-xr-x 3 root root     4096 Aug 26 00:47 ..
    -rw-r--r-- 1 1001 1002    11357 Jul 14 11:57 LICENSE
    -rw-r--r-- 1 1001 1002      463 Jul 14 11:57 NOTICE
    -rwxr-xr-x 1 1001 1002 13455120 Jul 14 11:57 node_exporter


------------------------------------------------------------------------


docker image build -t marvin/apache:1.0 .

docker image ls

    REPOSITORY                      TAG       IMAGE ID       CREATED          SIZE
    marvin/apache                   1.0       6409bacb0f6f   50 seconds ago   245MB

docker container run -it --name webserver marvin/apache:1.0

ps -ef

    UID          PID    PPID  C STIME TTY          TIME CMD
    root           1       0  0 02:11 pts/0    00:00:00 bash
    root           7       1  0 02:11 pts/0    00:00:00 ps -ef

/etc/init.d/apache2 start

ps -ef

    UID          PID    PPID  C STIME TTY          TIME CMD
    root           1       0  0 02:11 pts/0    00:00:00 bash
    root          32       1  0 02:13 ?        00:00:00 /usr/sbin/apache2 -k start
    www-data      35      32  0 02:13 ?        00:00:00 /usr/sbin/apache2 -k start
    www-data      36      32  0 02:13 ?        00:00:00 /usr/sbin/apache2 -k start
    root         111       1  0 02:14 pts/0    00:00:00 ps -ef

ss -atn

    State                      Recv-Q                     Send-Q                                         Local Address:Port                                         Peer Address:Port                    
    LISTEN                     0                          511                                                  0.0.0.0:80                                                0.0.0.0:*  

ip addr show eth0

    65: eth0@if66: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP group default 
        link/ether 02:42:ac:11:00:02 brd ff:ff:ff:ff:ff:ff link-netnsid 0
        inet 172.17.0.2/16 brd 172.17.255.255 scope global eth0
           valid_lft forever preferred_lft forever








------------------------------------------------------------------------



"""
FROM alpine:3.14
RUN apk add nginx curl
RUN mkdir -p /run/nginx
EXPOSE 80
ENTRYPOINT ["nginx"]
CMD ["-g", "daemon off;"]
"""


docker container run -d -it -p 80:80 --name giropops-web giropops-web

docker container ls

docker container exec -it giropops-web sh

curl localhost


------------------------------------------------------------------------


"""
# Etapa 1: Construção
FROM eclipse-temurin:22-jdk-alpine as build

# Define o diretório de trabalho
WORKDIR /app

# Copia o arquivo de build Gradle ou Maven (escolha a sua ferramenta)
COPY . .

# Compila a aplicação (ajuste o comando conforme sua ferramenta de build)
# Para Maven
RUN ./mvnw package -DskipTests

# Ou, se estiver usando Gradle, você pode usar:
# RUN ./gradlew build -x test

# Etapa 2: Execução
FROM alpine:latest

# Instale JRE e outras dependências, se necessário (o JRE já é o suficiente para Spring Boot)
RUN apk add --no-cache openjdk22

# Copia o jar compilado da etapa de construção
COPY --from=build /app/target/*.jar app.jar

# Define a porta que o aplicativo irá escutar
EXPOSE 8080

# Comando para executar o jar (ajuste o nome do seu jar se diferente)
CMD ["java", "-jar", "/app.jar"]
"""


docker build -t my-spring-boot-app .

docker run -d -p 8080:8080 my-spring-boot-app





------------------------------------------------------------------------


"""
FROM golang:1.18 as buildando
WORKDIR /app
COPY . ./
RUN go mod init hello
RUN go build -o /app/hello

FROM alpine:3.15.9
COPY --from=buildando /app/hello /app/hello
CMD ["/app/hello"]
"""


------------------------------------------------------------------------


Docker Hub Container Image Library | App Containerization
https://hub.docker.com/

docker login

docker image build -t marcusvbrangel/myapache2:1.0 .

docker image ls 

    REPOSITORY                      TAG       IMAGE ID       CREATED         SIZE
    marcusvbrangel/myapache2        1.0       8b35f2ac8f7e   19 hours ago    246MB


NOTE:

    docker image tag foobar marcusvbrangel/foobar:1.0


docker image push marcusvbrangel/myapache2:1.0

    The push refers to repository [docker.io/marcusvbrangel/myapache2]
    f8b05b404175: Pushed 
    19b1230ac19d: Mounted from library/debian 
    1.0: digest: sha256:cbd7804a8cb11d1c97ea31073509a7516e96e66741ed6cbfbddb1c7b2e48b939 size: 741


docker search marcusvbrangel

    NAME                            DESCRIPTION                                     STARS     OFFICIAL
    marcusvbrangel/myapache2        This is my simple yet functional apache webse…   0   


docker container run -d -it -p 80:80 --name mywebserver marcusvbrangel/myapache2:1.0

    Unable to find image 'marcusvbrangel/myapache2:1.0' locally
    1.0: Pulling from marcusvbrangel/myapache2
    3892befd2c3f: Already exists 
    c353af39ad7b: Already exists 
    Digest: sha256:cbd7804a8cb11d1c97ea31073509a7516e96e66741ed6cbfbddb1c7b2e48b939
    Status: Downloaded newer image for marcusvbrangel/myapache2:1.0
    2e205d5de2d089a4e4b9e09f65c78178a5b491154c91292d2febd895e187bb8b


curl localhost









--------------------------------------------------------------------


D E S A F I O   02



git clone https://github.com/badtuxx/giropops-senhas.git

&&

cd giropops-senhas/

&&

apt list --upgradable

apt update -y && apt install pip -y && apt install curl -y && apt install curl -y && apt install redis -y && apt install vim -y

&&

pip install --no-cache-dir -r requirements.txt

&&

systemctl start redis

systemctl status redis

&&

export REDIS_HOST=localhost

&&

flask run --host=0.0.0.0



---------- parte 02 -------


cd giropops-senhas

sudo apt install vim -y

vim Dockerfile

"""
FROM python:3.9.19-bullseye
WORKDIR /app
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt
COPY . .
EXPOSE 5000 8088
ENV REDIS_HOST=redis-service
CMD ["flask", "run", "--host=0.0.0.0", "--port=5000"]
"""

------

sudo ss -tulnp | grep 6379

    tcp    LISTEN   0        511             127.0.0.1:6379           0.0.0.0:*      users:(("redis-server",pid=3909,fd=6))
    tcp    LISTEN   0        511                 [::1]:6379              [::]:*      users:(("redis-server",pid=3909,fd=7))

sudo systemctl stop redis

systemctl status redis

ou

sudo kill pid

sudo ss -tulnp | grep 6379

------

docker image build -t marcusvbrangel/linuxtips-giropops-senhas:1.0 .


docker container rm -f giropops-senhas redis-service

docker container run -d --name redis-service -p 6379:6379 redis

docker container run -d -p 5000:5000 --name giropops-senhas marcusvbrangel/linuxtips-giropops-senhas:1.0


docker container rm -f giropops-senhas

docker container ls -a


@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

docker network create mynetwork

docker container run -d --name redis-service --network mynetwork -p 6379:6379 redis

docker container run -d --name giropops-senhas --network mynetwork -p 5000:5000 \
marcusvbrangel/linuxtips-giropops-senhas:1.0

ENV REDIS_HOST=redis-service

or

docker container run -d -p 5000:5000 --name giropops-senhas --network mynetwork -e
REDIS_HOST=redis-service marcusvbrangel/linuxtips-giropops-senhas:1.0

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@


docker login

docker push marcusvbrangel/linuxtips-giropops-senhas:1.0

https://hub.docker.com/repository/docker/marcusvbrangel/linuxtips-giropops-senhas/general


xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx






------------------------------------------------------------------------




------------------------------------------------------------------------


------------------------------------------------------------------------





------------------------------------------------------------------------




------------------------------------------------------------------------


------------------------------------------------------------------------




------------------------------------------------------------------------





------------------------------------------------------------------------





------------------------------------------------------------------------




------------------------------------------------------------------------


------------------------------------------------------------------------




------------------------------------------------------------------------





------------------------------------------------------------------------





------------------------------------------------------------------------




------------------------------------------------------------------------


------------------------------------------------------------------------




------------------------------------------------------------------------





------------------------------------------------------------------------





------------------------------------------------------------------------




------------------------------------------------------------------------


------------------------------------------------------------------------




------------------------------------------------------------------------





------------------------------------------------------------------------





------------------------------------------------------------------------




------------------------------------------------------------------------


------------------------------------------------------------------------




------------------------------------------------------------------------





------------------------------------------------------------------------





------------------------------------------------------------------------




------------------------------------------------------------------------


------------------------------------------------------------------------




------------------------------------------------------------------------





------------------------------------------------------------------------





------------------------------------------------------------------------




------------------------------------------------------------------------


------------------------------------------------------------------------




------------------------------------------------------------------------





------------------------------------------------------------------------





------------------------------------------------------------------------




------------------------------------------------------------------------


------------------------------------------------------------------------




------------------------------------------------------------------------





------------------------------------------------------------------------





------------------------------------------------------------------------




------------------------------------------------------------------------


------------------------------------------------------------------------




------------------------------------------------------------------------





------------------------------------------------------------------------





------------------------------------------------------------------------




------------------------------------------------------------------------


------------------------------------------------------------------------




------------------------------------------------------------------------





------------------------------------------------------------------------





------------------------------------------------------------------------




------------------------------------------------------------------------


------------------------------------------------------------------------




------------------------------------------------------------------------





------------------------------------------------------------------------





------------------------------------------------------------------------




------------------------------------------------------------------------


------------------------------------------------------------------------




------------------------------------------------------------------------





------------------------------------------------------------------------





------------------------------------------------------------------------




------------------------------------------------------------------------


------------------------------------------------------------------------




------------------------------------------------------------------------





------------------------------------------------------------------------





------------------------------------------------------------------------




------------------------------------------------------------------------



